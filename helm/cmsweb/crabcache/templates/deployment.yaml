apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "crabcache.fullname" . }}
  labels:
    {{- include "crabcache.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "crabcache.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "crabcache.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "crabcache.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        tty: true
        stdin: true
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - sudo chmod 0777 /data/srv/state/crabcache/files; sudo chown _crabcache:_crabcache /data/srv/state/crabcache/files
        securityContext:
        {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: {{ .Values.service.name }}
          containerPort: {{ .Values.service.port }}
          protocol: {{ .Values.service.protocol }}
        - name: {{ .Values.serviceMon.name }}
          containerPort: {{ .Values.serviceMon.port }}
          protocol: {{ .Values.serviceMon.protocol }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        resources:
            {{- toYaml .Values.resources | nindent 12 }}
          
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - mountPath: /host/etc/grid-security
          name: etc-grid-security
          readOnly: true
        - name: setup-certs-and-run
          mountPath: /opt/setup-certs-and-run

      {{- if or .Values.productionEnv.prod .Values.productionEnv.preProd }}
        - name: crabcache-storage
          mountPath: /data/srv/state/crabcache/files
        - name: logs
          mountPath: /data/srv/logs/crabcache
      - name: crabcache-filebeat
        image: docker.elastic.co/beats/filebeat:7.12.0
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
         ]
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
        volumeMounts:
         - name: logs
           mountPath: /data/srv/logs/crabcache
         - name: config
           mountPath: /etc/filebeat.yml
           readOnly: true
           subPath: filebeat.yml
         - name: data
           mountPath: /usr/share/filebeat/data
         - name: varlog
           mountPath: /var/log
         - name: varlibdockercontainers
           mountPath: /var/lib/docker/containers
           readOnly: true
       {{- end }}
      volumes:

      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: crabcache-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: etc-grid-security
        hostPath:
          path: /etc/grid-security
      - name: setup-certs-and-run
        configMap:
          name: crabcache

      {{- if or .Values.productionEnv.prod .Values.productionEnv.preProd }}
      - name: crabcache-storage

        persistentVolumeClaim:
{{- if .Values.env.preprod }}
            claimName: logs-cephfs-claim-preprod-crab
{{- end }}

{{- if .Values.env.prod }}
            claimName: logs-cephfs-claim-prod-crab
{{- end }}

      - name: logs
        persistentVolumeClaim:
{{- if .Values.env.preprod }}
            claimName: logs-cephfs-claim-preprod-crab
{{- end }}


{{- if .Values.env.prod }}
            claimName: logs-cephfs-claim-prod-crab
{{- end }}

      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          defaultMode: 0640
          name: crabcache-filebeat-config
      - name: data
        emptyDir: {}
      {{- end }}

      
