apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "das-server.fullname" . }}
  labels:
    {{- include "das-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  {{- if .Values.test}} 
  replicas: {{ .Values.replicaCount }}
  {{- else }}
  replicas: 3
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "das-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "das-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "das-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          {{- toYaml .Values.envVar | nindent 12 }}
          args:
          {{- toYaml .Values.args | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
           - containerPort: {{ .Values.service.port }}
             name: {{ .Values.service.name }}
             protocol: {{ .Values.service.protocol }}
           - containerPort: {{ .Values.serviceMon.port }}
             name: {{ .Values.serviceMon.name }}
             protocol: {{ .Values.serviceMon.protocol }}

          livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: proxy-secrets
            mountPath: /etc/proxy
            readOnly: true
          - name: secrets
            mountPath: /etc/secrets
            readOnly: true
          - name: robot-secrets
            mountPath: /etc/robots
            readOnly: true
          - name: hmac-secrets
            mountPath: /etc/hmac
            readOnly: true
         {{- if or .Values.env.prod .Values.env.preprod }}
          - name: logs
            mountPath: /data/logs
         {{- end }}
        - image: cmssw/exporters:20210628-static
          name: das-server-exporter
          resources:
            requests:
                memory: "50Mi"
                cpu: "50m"
          env:
          - name: X509_USER_PROXY
            value: /etc/proxy/proxy
          args:
          - /data/das2go_exporter
          - -address
          - ":18217"
          volumeMounts:
          - name: proxy-secrets
            mountPath: /etc/proxy
            readOnly: true
{{- if or .Values.env.prod .Values.env.preprod }}

          - name: logs
            mountPath: /data/logs
        - image: cmssw/promtail
          name: promtail
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
          args:
          - /data/promtail
          - -config.file
          - /etc/secrets/promtail-config.yaml
          volumeMounts:
          - name: promtail-secrets
            mountPath: /etc/secrets
          - name: logs
            mountPath: /data/logs
        - name: das-server-filebeat
          image: docker.elastic.co/beats/filebeat:7.12.0
          args: [
            "-c", "/etc/filebeat.yml",
            "-e",
          ]
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
          volumeMounts:
          - name: logs
            mountPath: /data/logs
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: data
            mountPath: /usr/share/filebeat/data
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true

{{- end }}

      initContainers:
      - name: checkcouchdb
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup das-mongo.das; do echo "Waiting for das-mongo"; sleep 10; done;']

      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: das-server-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
    {{- if or .Values.env.prod .Values.env.preprod }}
      - name: logs
        persistentVolumeClaim:
          claimName: logs-cephfs-claim-das
      - name: promtail-secrets
        configMap:
          name: das-server-promtail
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          defaultMode: 0640
          name: das-server-filebeat-config
      - name: data
        emptyDir: {}       
      {{- end }}

