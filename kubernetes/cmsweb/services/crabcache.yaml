---
apiVersion: v1
kind: ConfigMap
metadata:
  name: crabcache-filebeat-config
  namespace: crab
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /data/srv/logs/crabcache/*${MY_POD_NAME}*.log
      ignore_older: 1h
      scan_frequency: 10s
      backoff: 5s
      max_backoff: 10s
    output.console:
      codec.format:
        string: '%{[message]} - Podname=${MY_POD_NAME}'
        pretty: false
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: Service
apiVersion: v1
metadata:
  name: crabcache
  namespace: crab
spec:
  selector:
    app: crabcache
  ports:
    - port: 8271
      targetPort: 8271
      name: crabcache
    - port: 18271
      targetPort: 18271
      name: crabcache-mon
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: crabcache
  labels:
    app: crabcache
  namespace: crab
data:
  setup-certs-and-run.sh: |
    #!/bin/bash
    cp /host/etc/grid-security/* /etc/grid-security
    echo 'INFO Files in /etc/grid-security'
    ls -lahZ /etc/grid-security
    su  -c "cd /data && /data/run.sh" --preserve-environment  _crabcache
---    
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: crabcache
  name: crabcache
  namespace: crab
spec:
  selector:
    matchLabels:
      app: crabcache
  replicas: 1
  template:
    metadata:
      labels:
        app: crabcache
        env: k8s #k8s#
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "18271"
    spec:
#       nodeSelector:
#           storage: crabcache
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
      - image: cmssw/crabcache #imagetag
        name: crabcache
        tty: true
        stdin: true
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - sudo chmod 0777 /data/srv/state/crabcache/files; sudo chown _crabcache:_crabcache /data/srv/state/crabcache/files
        livenessProbe:
          exec:
            command:
            - cmsweb-ping
            - "--url=http://localhost:8271/crabcache/info"
            - "--authz=/etc/hmac/hmac"
            - -verbose
            - "0"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 60
        readinessProbe:
          exec:
            command:
            - cmsweb-ping
            - "--url=http://localhost:8271/crabcache/info"
            - "--authz=/etc/hmac/hmac"
            - -verbose
            - "0"
          periodSeconds: 60
          timeoutSeconds: 60
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "3Gi"
            cpu: "1500m"
        ports:
        - containerPort: 8271
          protocol: TCP
          name: crabcache
        - containerPort: 18271
          protocol: TCP
          name: crabcache-mon
        command:
        - /bin/bash
        - /opt/setup-certs-and-run/setup-certs-and-run.sh
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - mountPath: /host/etc/grid-security
          name: etc-grid-security
          readOnly: true
        - name: setup-certs-and-run
          mountPath: /opt/setup-certs-and-run
        # TMP: use cinder storage for time being
#PROD#  - name: crabcache-storage
#PROD#    mountPath: /data/srv/state/crabcache/files
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/crabcache
#PROD#- name: crabcache-filebeat
#PROD#  image: docker.elastic.co/beats/filebeat:7.12.0
#PROD#  args: [
#PROD#    "-c", "/etc/filebeat.yml",
#PROD#    "-e",
#PROD#  ]
#PROD#  env:
#PROD#  - name: MY_POD_NAME
#PROD#    valueFrom:
#PROD#      fieldRef:
#PROD#        apiVersion: v1
#PROD#        fieldPath: metadata.name
#PROD#  resources:
#PROD#    requests:
#PROD#      memory: "50Mi"
#PROD#      cpu: "50m"
#PROD#  volumeMounts:
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/crabcache
#PROD#  - name: config
#PROD#    mountPath: /etc/filebeat.yml
#PROD#    readOnly: true
#PROD#    subPath: filebeat.yml
#PROD#  - name: data
#PROD#    mountPath: /usr/share/filebeat/data
#PROD#  - name: varlog
#PROD#    mountPath: /var/log
#PROD#  - name: varlibdockercontainers
#PROD#    mountPath: /var/lib/docker/containers
#PROD#    readOnly: true
        securityContext:
          privileged: true
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: crabcache-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: etc-grid-security
        hostPath:
            path: /etc/grid-security
      - name: setup-certs-and-run
        configMap:
          name: crabcache
      # TMP: use ciner storage for time being
#PROD#- name: crabcache-storage
#PROD#  persistentVolumeClaim:
#PROD#      claimName: crabcache-claim
#PROD#- name: logs
#PROD#  persistentVolumeClaim:
#PROD#      claimName: logs-cephfs-claim-crab
#PROD#- name: varlog
#PROD#  hostPath:
#PROD#    path: /var/log
#PROD#- name: varlibdockercontainers
#PROD#  hostPath:
#PROD#    path: /var/lib/docker/containers
#PROD#- name: config
#PROD#  configMap:
#PROD#    defaultMode: 0640
#PROD#    name: crabcache-filebeat-config
#PROD#- name: data
#PROD#  emptyDir: {}
